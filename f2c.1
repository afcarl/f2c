


F2C(1)                                                     F2C(1)


NNAAMMEE
       f2c - Convert Fortran 77 to C or C++

SSYYNNOOPPSSIISS
       ff22cc [ _o_p_t_i_o_n _._._.  ] _f_i_l_e _._._.

DDEESSCCRRIIPPTTIIOONN
       _F_2_c  converts  Fortran  77 source code in _f_i_l_e_s with names
       ending in `.f' or `.F' to C (or C++) source files  in  the
       current  directory,  with  `.c'  substituted for the final
       `.f' or `.F'.  If no Fortran files are  named,  _f_2_c  reads
       Fortran  from standard input and writes C on standard out-
       put.  _F_i_l_e names that end with `.p' or `.P' are  taken  to
       be  prototype  files,  as produced by option `-P', and are
       read first.

       The following options have the same meaning as in  _f_7_7(1).

       --CC     Compile  code  to  check that subscripts are within
              declared array bounds.

       --II22    Render INTEGER and LOGICAL as short,  INTEGER*4  as
              long  int.   Assumes the default _l_i_b_f_2_c: allow only
              INTEGER*4 (and no LOGICAL) variables  in  INQUIREs.
              Option  `-I4'  confirms  the  default  rendering of
              INTEGER as long int.

       --II_d_i_r  Look for a non-absolute include file first  in  the
              directory of the current input file, then in direc-
              tories specified by -I options (one  directory  per
              option).   Options -I2 and -I4 have precedence, so,
              e.g., a directory named 2 should  be  specified  by
              -I./2 .

       --oonneettrriipp
              Compile  DO  loops that are performed at least once
              if reached.  (Fortran 77 DO loops are not performed
              at all if the upper limit is smaller than the lower
              limit.)

       --UU     Honor the case  of  variable  and  external  names.
              Fortran keywords must be in _l_o_w_e_r case.

       --uu     Make  the  default  type  of a variable `undefined'
              rather than using the default Fortran rules.

       --ww     Suppress all warning messages, or, if the option is
              `-w66', just Fortran 66 compatibility warnings.

       The following options are peculiar to _f_2_c.

       --AA     Produce  ANSI  C (default, starting 20020621).  For
              old-style C, use option -K.




                                                                1





F2C(1)                                                     F2C(1)


       --aa     Make local variables automatic rather  than  static
              unless   they   appear   in  a  DATA,  EQUIVALENCE,
              NAMELIST, or SAVE statement.

       --CC++++   Output C++ code.

       --cc     Include original Fortran source as comments.

       --ccdd    Do not recognize cdabs, cdcos, cdexp, cdlog, cdsin,
              and  cdsqrt  as  synonyms  for  the  double complex
              intrinsics zabs, zcos, zexp, zlog, zsin, and zsqrt,
              respectively, nor dreal as a synonym for dble.

       --dd_d_i_r  Write  `.c'  files  in directory _d_i_r instead of the
              current directory.

       --EE     Declare uninitialized COMMON to be EExxtteerrnn (overrid-
              ably defined in f2c.h as eexxtteerrnn))..

       --eecc    Place   uninitialized  COMMON  blocks  in  separate
              files: CCOOMMMMOONN  //AABBCC//  appears  in  file  aabbcc__ccoomm..cc.
              Option  `-e1c'  bundles the separate files into the
              output file, with comments that give an  unbundling
              _s_e_d(1) script.

       --eexxtt   Complain about _f_7_7(1) extensions.

       --ff     Assume  free-format input: accept text after column
              72 and do not pad fixed-format lines  shorter  than
              72 characters with blanks.

       --7722    Treat text appearing after column 72 as an error.

       --gg     Include  original  Fortran  line  numbers  in #line
              lines.

       --hh     Emulate Fortran 66's treatment of Hollerith: try to
              align  character strings on word (or, if the option
              is `-hd', on double-word) boundaries.

       --ii22    Similar  to  --II22,  but  assume  using  a   modified
              _l_i_b_f_2_c___i_2  (which  was  compiled with --DDff22cc__ii22), so
              INTEGER and LOGICAL variables may  be  assigned  by
              INQUIRE and array lengths are stored in short ints.

       --ii9900   Do not recognize the  Fortran  90  bit-manipulation
              intrinsics  btest, iand, ibclr, ibits, ibset, ieor,
              ior, ishft, and ishftc.

       --kkrr    Use temporary values to enforce Fortran  expression
              evaluation  where K&R (first edition) parenthesiza-
              tion rules allow rearrangement.  If the  option  is
              `-krd',  use  double precision temporaries even for
              single-precision operands.



                                                                2





F2C(1)                                                     F2C(1)


       --PP     Write a _f_i_l_e..PP of ANSI (or C++) prototypes for def-
              initions  in  each  input  _f_i_l_e..ff  or _f_i_l_e..FF_.  When
              reading Fortran from standard input,  write  proto-
              types  at the beginning of standard output.  Option
              --PPss implies --PP and gives exit status 4 if rerunning
              _f_2_c may change prototypes or declarations.

       --pp     Supply  preprocessor  definitions  to  make common-
              block members look like local variables.

       --RR     Do not promote REAL  functions  and  operations  to
              DOUBLE   PRECISION.    Option  `-!R'  confirms  the
              default, which imitates _f_7_7.

       --rr     Cast REAL arguments of intrinsic functions and val-
              ues  of  REAL  functions  (including intrinsics) to
              REAL.

       --rr88    Promote REAL to DOUBLE PRECISION, COMPLEX to DOUBLE
              COMPLEX.

       --ss     Preserve  multidimensional  subscripts.  Suppressed
              by option `-C' .

       --TT_d_i_r  Put temporary files in directory _d_i_r_.

       --ttrraappuuvv
              Dynamically  initialize  local  variables,   except
              those  appearing  in  SAVE or DATA statements, with
              values that may help find references to  uninitial-
              ized variables.  For example, with IEEE arithmetic,
              initialize local floating-point variables  to  sig-
              naling NaNs.

       --ww88    Suppress warnings when COMMON or EQUIVALENCE forces
              odd-word alignment of doubles.

       --WW_n    Assume _n characters/word (default 4) when  initial-
              izing numeric variables with character data.

       --zz     Do not implicitly recognize DOUBLE COMPLEX.

       --!!bbss   Do not recognize _back_slash escapes (\", \', \0, \\,
              \b, \f, \n, \r, \t, \v) in character strings.

       --!!cc    Inhibit C output, but produce --PP output.

       --!!II    Reject iinncclluuddee statements.

       --!!ii88   Disallow  INTEGER*8  ,  or,  if   the   option   is
              `-!i8const',  permit  INTEGER*8  but do not promote
              integer constants to INTEGER*8  when  they  involve
              more than 32 bits.




                                                                3





F2C(1)                                                     F2C(1)


       --!!iitt   Don't  infer  types  of untyped EXTERNAL procedures
              from use as parameters  to  previously  defined  or
              prototyped procedures.

       --!!PP    Do not attempt to infer ANSI or C++ prototypes from
              usage.

       The resulting C  invokes  the  support  routines  of  _f_7_7;
       object code should be loaded by _f_7_7 or with _l_d(1) or _c_c(1)
       options --llFF7777 --llII7777 --llmm.  Calling conventions are those of
       _f_7_7: see the reference below.

FFIILLEESS
       _f_i_l_e..[[ffFF]]
              input file

       **..cc    output file

       /usr/include/f2c.h
              header file

       /usr/lib/libf2c.a
              Default  Fortran  I/O and intrinsic function static
              library

       /usr/lib/libf2c_i2.a
              Fortran I/O and intrinsic function  static  library
              (compiled  so  that short INTEGERs and LOGICALs may
              be assigned by INQUIRE). To be used  with  the  --ii22
              option.

       /usr/lib/libf2c.so.2
              Fortran I/O and intrinsic function shared library

       /usr/lib/libf2c_i2.so.2
              Fortran  I/O  and intrinsic function shared library
              (for use with --ii22 option) see the information about
              the static version above).

SSEEEE AALLSSOO
       S. I. Feldman and P. J. Weinberger, `A Portable Fortran 77
       Compiler', _U_N_I_X _T_i_m_e _S_h_a_r_i_n_g _S_y_s_t_e_m  _P_r_o_g_r_a_m_m_e_r_'_s  _M_a_n_u_a_l,
       Tenth Edition, Volume 2, AT&T Bell Laboratories, 1990.

DDIIAAGGNNOOSSTTIICCSS
       The  diagnostics  produced by _f_2_c are intended to be self-
       explanatory.

BBUUGGSS
       Floating-point constant expressions are simplified in  the
       floating-point  arithmetic  of the machine running _f_2_c, so
       they are typically accurate to at most 16  or  17  decimal
       places.
       Untypable EXTERNAL functions are declared iinntt.



                                                                4





F2C(1)                                                     F2C(1)


       There is no notation for INTEGER*8 constants.
       Some  intrinsic functions do not yet work with INTEGER*8 .























































                                                                5


